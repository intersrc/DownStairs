// Generated by Haxe 3.4.1 (git build master @ 5c44548)
(function () { "use strict";
var Common = function() { };
Common.__name__ = true;
Common.autoSize = function() {
	var canvas = window.document.getElementById("mainCanvas");
	canvas.style.width = (canvas.width = 320) + "px";
	canvas.style.height = (canvas.height = 568) + "px";
	var div = window.document.getElementById("mainDiv");
	div.style.position = "absolute";
	div.style.left = "50%";
	div.style.top = "50%";
	div.style.width = canvas.style.width;
	div.style.height = canvas.style.height;
	div.style.marginLeft = -160. + "px";
	div.style.marginTop = -284. + "px";
};
var EReg = function() { };
EReg.__name__ = true;
var MainPreload = function() { };
MainPreload.__name__ = true;
MainPreload.main = function() {
	Common.autoSize();
	var stageWidth = 320;
	var stageHeight = 568;
	var canvas = window.document.getElementById("mainCanvas");
	var stage = new createjs.Stage(canvas);
	var targetJs = canvas.dataset == null ? canvas.getAttribute("data-target") : canvas.dataset.target;
	var preload = new createjs.LoadQueue();
	var manifest = [{ id : "BMP_PLAYER", src : "./assets/player_3.png"},{ id : "BMP_FLOOR_NORMAL", src : "./assets/floor_0.png"},{ id : "BMP_FLOOR_ELASTIC", src : "./assets/floor_1.png"},{ id : "BMP_FLOOR_CONVEYER", src : "./assets/floor_3.png"},{ id : "BMP_ARROW", src : "./assets/arrow_0.png"},{ id : "BMP_LEFT", src : "./assets/arrow_left_1.png"},{ id : "BMP_RIGHT", src : "./assets/arrow_right_1.png"},{ id : "BMP_MUTE", src : "./assets/mute_0.png"},{ id : "BMP_MUTE_BG", src : "./assets/mute_bg_0.png"},{ id : targetJs, src : targetJs}];
	if(createjs.Sound.initializeDefaultPlugins()) {
		manifest.push({ id : "elastic", src : "./assets/elastic.wav"});
		manifest.push({ id : "die", src : "./assets/hurt1.wav"});
	}
	var messageField = new createjs.Text("Loading","bold 24px Arial","#FFFFFF");
	messageField.maxWidth = 1000;
	messageField.textAlign = "center";
	messageField.x = stageWidth / 2;
	messageField.y = stageHeight / 2 - 48;
	stage.addChild(messageField);
	stage.update();
	var blocks = [];
	var _g = 0;
	while(_g < 20) {
		var i = _g++;
		var bmp = new createjs.Bitmap("./assets/block_0.png");
		bmp.x = -8;
		bmp.y = -8;
		var block = new createjs.Container();
		block.addChild(bmp);
		block.x = stageWidth / 2 - 160 + i * 16 + 8;
		block.y = (stageHeight - 16) / 2 + 8 + 16;
		block.visible = false;
		blocks[i] = block;
		stage.addChild(block);
	}
	var time;
	var update = function(event) {
		time = event.delta / 1000;
		var _g1 = 0;
		while(_g1 < 20) {
			var i1 = _g1++;
			if(blocks[i1].visible && (blocks[i1 + 1] == null || !blocks[i1 + 1].visible)) {
				blocks[i1].rotation += 360 * time;
			} else {
				blocks[i1].rotation = 0;
			}
		}
		stage.update(event);
	};
	createjs.Ticker.addEventListener("tick",update);
	createjs.Ticker.timingMode = createjs.Ticker.TIMEOUT;
	createjs.Ticker.setFPS(60);
	var updateLoading = function() {
		var percentStr = Std.string(Math.floor(preload.progress * 1000) / 10);
		if(percentStr.indexOf(".") == -1) {
			percentStr += ".0";
		}
		messageField.text = "Loading " + percentStr + "%";
		var n = Math.ceil(preload.progress * 20);
		var _g11 = 0;
		var _g2 = n;
		while(_g11 < _g2) {
			var i2 = _g11++;
			blocks[i2].visible = true;
		}
		stage.update();
	};
	var scripts = [];
	var doneLoading = function(event1) {
		stage.removeAllChildren();
		var _g3 = 0;
		while(_g3 < scripts.length) {
			var script = scripts[_g3];
			++_g3;
			window.document.body.appendChild(script);
		}
	};
	var handleFileLoaded = function(event2) {
		var item = event2.item;
		var id = item.id;
		var result = event2.result;
		if(item.type == createjs.LoadQueue.JAVASCRIPT) {
			scripts.push(result);
		}
	};
	preload.installPlugin(createjs.Sound);
	preload.addEventListener("complete",doneLoading);
	preload.addEventListener("progress",updateLoading);
	preload.addEventListener("fileload",handleFileLoaded);
	preload.loadManifest(manifest);
};
Math.__name__ = true;
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
String.__name__ = true;
Array.__name__ = true;
MainPreload.main();
})();
